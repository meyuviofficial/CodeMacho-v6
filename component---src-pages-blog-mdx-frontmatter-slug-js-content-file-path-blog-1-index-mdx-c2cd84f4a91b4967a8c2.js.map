{"version":3,"file":"component---src-pages-blog-mdx-frontmatter-slug-js-content-file-path-blog-1-index-mdx-c2cd84f4a91b4967a8c2.js","mappings":"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","sources":["webpack://code-macho-v6/./blog/1/index.mdx","webpack://code-macho-v6/./src/pages/blog/{mdx.frontmatter__slug}.js","webpack://code-macho-v6/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    img: \"img\",\n    blockquote: \"blockquote\",\n    p: \"p\",\n    code: \"code\",\n    h2: \"h2\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\",\n    pre: \"pre\",\n    ol: \"ol\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"Introduction\"), \"\\n\", React.createElement(_components.img, {\n    src: \"https://images.unsplash.com/photo-1493836512294-502baa1986e2?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1190&q=80\",\n    alt: \"Hero Image\"\n  }), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"**Are you tired of juggling of between multiple clusters in your local machine? ** Then, it is time to automate your local setup and it's configuration. If you're working as a \", React.createElement(_components.code, null, \"cluster-admin\"), \" for anyone of the enterprises,\\nthen this blog might be able to help you.\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"Prerequisites\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Bash Scripting\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://gist.github.com/olih/f7437fb6962fb3ee9fe95bda8d2c8fa4\"\n  }, \"JQ\")), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"Pros :star:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Multiple clusters can configured locally in an automated way\"), \"\\n\", React.createElement(_components.li, null, \"If your local configuration is messed up (Which I do often :P), it is easy to fix it.\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"Manual Way?\"), \"\\n\", React.createElement(_components.p, null, \"To setup a cluster locally, the cluster context needs to be added in your machine.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-sh\"\n  }, \"az aks get-credentials -n \\\"${name}\\\" -g \\\"${resource_group}\\\" # Setting the Kube Context\\n\")), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"Running the above cmd for every cluster can be cumbersome. Let's automate it!!\"), \"\\n\"), \"\\n\", React.createElement(_components.h2, null, \"CODE\"), \"\\n\", React.createElement(_components.p, null, \"Let's jump into the solution right away.\"), \"\\n\", React.createElement(_components.ol, null, \"\\n\", React.createElement(_components.li, null, \"First, try to create a json file that acts as the input for our script.\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-json\"\n  }, \"{\\n  \\\"<Subscription-ID>\\\": {\\n    \\\"region\\\": \\\"<region>\\\",\\n    \\\"name\\\": \\\"<cluster  name>\\\",\\n    \\\"resource_group\\\": \\\"<Resource Group Name>\\\"\\n  },\\n  \\\"<Subscription-ID>\\\": {\\n    \\\"region\\\": \\\"<region>\\\",\\n    \\\"name\\\": \\\"<cluster  name>\\\",\\n    \\\"resource_group\\\": \\\"<Resource Group Name>\\\"\\n  },\\n  \\\"<Subscription-ID>\\\": {\\n    \\\"region\\\": \\\"<region>\\\",\\n    \\\"name\\\": \\\"<cluster  name>\\\",\\n    \\\"resource_group\\\": \\\"<Resource Group Name>\\\"\\n  },\\n  \\\"<Subscription-ID>\\\": {\\n    \\\"region\\\": \\\"<region>\\\",\\n    \\\"name\\\": \\\"<cluster  name>\\\",\\n    \\\"resource_group\\\": \\\"<Resource Group Name>\\\"\\n  },\\n  \\\"<Subscription-ID>\\\": {\\n    \\\"region\\\": \\\"<region>\\\",\\n    \\\"name\\\": \\\"<cluster  name>\\\",\\n    \\\"resource_group\\\": \\\"<Resource Group Name>\\\"\\n  },\\n  \\\"<Subscription-ID>\\\": {\\n    \\\"region\\\": \\\"<region>\\\",\\n    \\\"name\\\": \\\"<cluster  name>\\\",\\n    \\\"resource_group\\\": \\\"<Resource Group Name>\\\"\\n  },\\n  \\\"<Subscription-ID>\\\": {\\n    \\\"region\\\": \\\"<region>\\\",\\n    \\\"name\\\": \\\"<cluster  name>\\\",\\n    \\\"resource_group\\\": \\\"<Resource Group Name>\\\"\\n  }\\n}\\n\")), \"\\n\", React.createElement(_components.ol, {\n    start: \"2\"\n  }, \"\\n\", React.createElement(_components.li, null, \"Read the data from the input JSON file created at the previous step using the JQ cmd and fetch the list of subscription IDs.\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-sh\"\n  }, \"# Getting the list of subscriptoin IDs\\nsubscription_ids=$(echo \\\"${data}\\\" | jq -r 'keys | .[]')\\n\")), \"\\n\", React.createElement(_components.ol, {\n    start: \"3\"\n  }, \"\\n\", React.createElement(_components.li, null, \"Let's loop the list of subscription IDs and update the kube context for every cluster\"), \"\\n\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-sh\"\n  }, \"echo \\\"${subscription_ids}\\\" | while read -r subscription_id; do\\n    echo \\\"Setting the AZ Context for the Current Sub ID: ${subscription_id}\\\"\\n    az account set -s \\\"${subscription_id}\\\" # Setting the Az Context\\n\\n    name=$(echo ${data} | jq -re '.'\\\\\\\"$subscription_id\\\\\\\"'.'name'') # Fetching the Name of the Cluster\\n    resource_group=$(echo ${data} | jq -re '.'\\\\\\\"$subscription_id\\\\\\\"'.'resource_group'') # Fetching the name of the resource group\\n    echo \\\"Getting the aks credentials for the cluster : ${name} in the rg: ${resource_group}\\\"\\n    az aks get-credentials -n \\\"${name}\\\" -g \\\"${resource_group}\\\" # Setting the Kube Context\\ndone\\n\")), \"\\n\", React.createElement(_components.p, null, \"The whole code looks like something below.\"), \"\\n\", React.createElement(_components.pre, null, React.createElement(_components.code, {\n    className: \"language-sh\"\n  }, \"#!/bin/bash\\n\\n# Getting the Cluster Info from the local Json\\ndata=$(cat <\\\"./data/cluster_info.json\\\" | jq -r)\\n\\n# Getting the list of subscriptoin IDs\\nsubscription_ids=$(echo \\\"${data}\\\" | jq -r 'keys | .[]')\\necho \\\"${subscription_ids}\\\" | while read -r subscription_id; do\\n    echo \\\"Setting the AZ Context for the Current Sub ID: ${subscription_id}\\\"\\n    az account set -s \\\"${subscription_id}\\\" # Setting the Az Context\\n\\n    name=$(echo ${data} | jq -re '.'\\\\\\\"$subscription_id\\\\\\\"'.'name'') # Fetching the Name of the Cluster\\n    resource_group=$(echo ${data} | jq -re '.'\\\\\\\"$subscription_id\\\\\\\"'.'resource_group'') # Fetching the name of the resource group\\n    echo \\\"Getting the aks credentials for the cluster : ${name} in the rg: ${resource_group}\\\"\\n    az aks get-credentials -n \\\"${name}\\\" -g \\\"${resource_group}\\\" # Setting the Kube Context\\ndone\\n\\n\")), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"NOTE: The above solution is applicable only for AKS Clusters.\"), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/Users/yuvaraj.selvarajan/Documents/YCode/CodeMachoBlogs/CodeMacho_v6/CodeMacho/blog/1/index.mdx\";\nimport * as React from \"react\";\nimport Seo from \"../../components/seo\";\nimport Layout from \"../../components/layout\";\nimport {graphql} from \"gatsby\";\nconst BlogPost = ({data, children}) => {\n  return React.createElement(\"html\", null, React.createElement(Layout, null, React.createElement(\"div\", {\n    class: \"flex items-center justify-center min-h-screen px-1\"\n  }, React.createElement(\"div\", {\n    className: \"flex justify-center drop-shadow-2xl mx-3 p-8 mt-12 mx-24 w-screen md:w-2/4 border-2 border-red-600 bg-gradient-to-br from-gray-100 to-gray-300 rounded-xl prose-headings:text-red-600\"\n  }, React.createElement(\"article\", {\n    className: \"prose lg:prose-l prose-img:rounded-xl prose-a:text-blue-600\"\n  }, React.createElement(\"h1\", {\n    className: \"mb-4 pt-4 text-4xl font-extrabold leading-none tracking-tight text-gray-900 md:text-5xl lg:text-6xl dark:text-white\"\n  }, data.mdx.frontmatter.title), React.createElement(\"p\", {\n    className: \"font-bold text-red-600\"\n  }, data.mdx.frontmatter.date), React.createElement(\"p\", {\n    className: \"text-justify\"\n  }, children))))));\n};\nexport const query = graphql`\n  query ($id: String) {\n    mdx(id: { eq: $id }) {\n      frontmatter {\n        title\n        date(formatString: \"MMMM D, YYYY\")\n      }\n    }\n  }\n`;\nexport const Head = ({data}) => React.createElement(Seo, {\n  title: data.mdx.frontmatter.title\n});\nBlogPost\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPost, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","img","blockquote","p","code","h2","ul","li","a","pre","ol","_provideComponents","components","React","src","alt","href","className","start","wrapper","MDXLayout","BlogPost","_ref","data","children","Layout","class","mdx","frontmatter","title","date","Head","_ref2","Seo","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}